- hosts: 127.0.0.1
  vars_files:
    - var/analytics-cluster.yml
  connection: local
  tasks:
    - name: create hadoop security group
      local_action:
        module: ec2_group
        name: analytics
        description: Security group for Hadoop clusters
        region: eu-west-1
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 0
            to_port: 65535
            group_name: analytics
        state: present

    - name: create worker instances
      local_action:
        module: ec2
        key_name: "{{ key_name }}"
        instance_type: "{{ worker_instance_type }}"
        image: "{{ worker_ami }}"
        region: eu-west-1
        volumes: "{{ analytics_worker_volumes }}"
        wait: yes
        group: analytics
        instance_tags:
          Name: hadoop-worker
          Environment: "{{cluster_environment}}"
        count_tag:
          Name: hadoop-worker
          Environment: "{{cluster_environment}}"
        exact_count: "{{ worker_count }}"
      register: ec2_workers
      tags:
        - instances

    - name: Wait for SSH on worker machines
      wait_for: host={{ item.public_ip }} delay=15 port=22 state=started
      with_items: ec2_workers.instances
      when: ec2_workers.changed
      tags:
        - instances

    - name: add hadoop machines to worker group
      add_host: hostname={{ item.public_ip }} groupname=worker
      with_items: ec2_workers.tagged_instances
      tags:
        - instances

    - name: create master instances
      local_action:
        module: ec2
        key_name: "{{ key_name }}"
        instance_type: "{{ master_instance_type }}"
        image: "{{ master_ami }}"
        region: eu-west-1
        volumes: "{{ analytics_master_volumes }}"
        wait: yes
        group: analytics
        instance_tags:
          Name: hadoop-master
          Environment: "{{cluster_environment}}"
        count_tag:
          Name: hadoop-master
          Environment: "{{cluster_environment}}"
        exact_count: "{{ master_count }}"
      register: ec2_masters
      tags:
        - instances

    - name: Wait for SSH on master machines
      wait_for: host={{ item.public_ip }} delay=15 port=22 state=started
      with_items: ec2_masters.instances
      when: ec2_masters.changed
      tags:
        - instances

    - name: add hadoop master machines to master group
      add_host: hostname={{ item.public_ip }} groupname=master
      with_items: ec2_masters.tagged_instances
      tags:
        - instances
